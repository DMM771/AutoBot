{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D5\\u05E8\\u05D0\\u05DC \\u05DE\\u05E9\\u05E2\\u05DF\\\\Desktop\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\chatbot\\\\chat-bot\\\\src\\\\Contact.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact(_ref) {\n  let {\n    contact,\n    setContact,\n    setListMessages,\n    username\n  } = _ref;\n  const lastMessage = message => {\n    // if (message.type === \"image\") {\n    //     return <img src={message.value} className=\"last-message-image\" alt=\"not found\"/>\n    // } else if (message.type === \"video\") {\n    //     return <i className=\"bi bi-person-video3 last-message-image\"/>\n    // } else if (message.type === \"record\") {\n    //     return <i className=\"bi bi-mic-fill last-message-image\"/>\n    // } else if (message.type === \"text\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-1 message-peak-text\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n    //}\n  };\n\n  async function setMessages() {\n    let data = await fetch(\"http://localhost:5108/api/contacts/\" + contact.id + \"/messages?username=\" + username, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    data = await data.json();\n    setContact(contact);\n    setListMessages(data);\n  }\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    className: \"list-group-item\",\n    id: \"transparent-bubble\",\n    onClick: setMessages,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"rounded-circle contact-pic\",\n        src: \"\",\n        alt: \"no picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mb-1 big-text user-name\",\n      children: contact.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text-muted date-text\",\n      children: contact.lastdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), lastMessage(contact.last)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["Contact","_ref","contact","setContact","setListMessages","username","lastMessage","message","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","setMessages","data","fetch","id","method","headers","json","onClick","src","alt","name","lastdate","last","_c","$RefreshReg$"],"sources":["C:/Users/אוראל משען/Desktop/לימודים/chatbot/chat-bot/src/Contact.js"],"sourcesContent":["function Contact({contact, setContact, setListMessages, username}) {\r\n    const lastMessage = (message) => {\r\n        // if (message.type === \"image\") {\r\n        //     return <img src={message.value} className=\"last-message-image\" alt=\"not found\"/>\r\n        // } else if (message.type === \"video\") {\r\n        //     return <i className=\"bi bi-person-video3 last-message-image\"/>\r\n        // } else if (message.type === \"record\") {\r\n        //     return <i className=\"bi bi-mic-fill last-message-image\"/>\r\n        // } else if (message.type === \"text\") {\r\n        return <p className=\"mb-1 message-peak-text\">{message}</p>\r\n        //}\r\n    }\r\n    async function setMessages() {\r\n        let data = await fetch(\"http://localhost:5108/api/contacts/\" + contact.id + \"/messages?username=\" + username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        data = await data.json();\r\n        setContact(contact);\r\n        setListMessages(data);\r\n    }\r\n\r\n    return (\r\n        <a className=\"list-group-item\" id=\"transparent-bubble\" onClick={setMessages}>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <img className=\"rounded-circle contact-pic\"\r\n                     src=\"\" alt=\"no picture\"/>\r\n            </div>\r\n            <h5 className=\"mb-1 big-text user-name\">{contact.name}</h5>\r\n            <small className=\"text-muted date-text\">{contact.lastdate}</small>\r\n            {lastMessage(contact.last)}\r\n            {/*<p className=\"mb-1 message-peak-text\">{contact.messages[contact.messages.length-1].value}</p>*/}\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Contact"],"mappings":";;AAAA,SAASA,OAAOA,CAAAC,IAAA,EAAmD;EAAA,IAAlD;IAACC,OAAO;IAAEC,UAAU;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EAC7D,MAAMK,WAAW,GAAIC,OAAO,IAAK;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA,oBAAOC,OAAA;MAAGC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAEH;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;IAC1D;EACJ,CAAC;;EACD,eAAeC,WAAWA,CAAA,EAAG;IACzB,IAAIC,IAAI,GAAG,MAAMC,KAAK,CAAC,qCAAqC,GAAGf,OAAO,CAACgB,EAAE,GAAG,qBAAqB,GAAGb,QAAQ,EAAE;MAC1Gc,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACFJ,IAAI,GAAG,MAAMA,IAAI,CAACK,IAAI,EAAE;IACxBlB,UAAU,CAACD,OAAO,CAAC;IACnBE,eAAe,CAACY,IAAI,CAAC;EACzB;EAEA,oBACIR,OAAA;IAAGC,SAAS,EAAC,iBAAiB;IAACS,EAAE,EAAC,oBAAoB;IAACI,OAAO,EAAEP,WAAY;IAAAL,QAAA,gBACxEF,OAAA;MAAKC,SAAS,EAAC,gCAAgC;MAAAC,QAAA,eAC3CF,OAAA;QAAKC,SAAS,EAAC,4BAA4B;QACtCc,GAAG,EAAC,EAAE;QAACC,GAAG,EAAC;MAAY;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5B,eACNN,OAAA;MAAIC,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAER,OAAO,CAACuB;IAAI;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC3DN,OAAA;MAAOC,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAAER,OAAO,CAACwB;IAAQ;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACjER,WAAW,CAACJ,OAAO,CAACyB,IAAI,CAAC;EAAA;IAAAhB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAE1B;AAEZ;AAACc,EAAA,GApCQ5B,OAAO;AAsChB,eAAeA,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}