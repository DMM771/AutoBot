{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D5\\u05E8\\u05D0\\u05DC \\u05DE\\u05E9\\u05E2\\u05DF\\\\Desktop\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\chatbot\\\\chat-bot\\\\src\\\\ChatPage.js\",\n  _s = $RefreshSig$();\nimport LeftMenu from \"./LeftMenu\";\nimport RightSec from \"./RightSec\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage() {\n  _s();\n  let data = useLocation().state.id;\n  // const [contact, setContact] = useState(null);\n  const [connection, setConnection] = useState([]);\n  async function fetchContact() {\n    let ser = await fetch('http://localhost:5108/api/contacts/user/' + data, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    ser = await ser.json();\n    setContactList(ser[0].contacts);\n  }\n\n  // async function fetchMessages() {\n  //     let userData = await fetch(\"http://localhost:5108/api/contacts/\" + contact.id + \"/messages?username=\" + data, {\n  //         method: 'GET',\n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         }\n  //     });\n  //     userData = await userData.json();\n  //     setListMessages(userData);\n  // }\n\n  const connectServer = async () => {\n    try {\n      const connection = new HubConnectionBuilder().withUrl(\"http://localhost:5108/serverHub\").configureLogging(LogLevel.Information).build();\n      connection.on(\"ReceiveMessage\", () => {\n        fetchContact();\n        if (contact) {\n          fetchMessages();\n        }\n      });\n      connection.on(\"ReceiveContact\", () => {\n        fetchContact();\n      });\n      await connection.start();\n      setConnection(connection);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  let [contactList, setContactList] = useState([]);\n  const [listMessages, setListMessages] = useState([]);\n  connectServer();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page-background\",\n    children: /*#__PURE__*/_jsxDEV(RightSec, {\n      contact: contact,\n      listMessages: listMessages,\n      setListMessages: setListMessages,\n      username: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatPage, \"uEjsbq+W/6OD0ChLT9MD8XWLQkE=\", false, function () {\n  return [useLocation];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["LeftMenu","RightSec","useState","useLocation","HubConnectionBuilder","LogLevel","jsxDEV","_jsxDEV","ChatPage","_s","data","state","id","connection","setConnection","fetchContact","ser","fetch","method","headers","json","setContactList","contacts","connectServer","withUrl","configureLogging","Information","build","on","contact","fetchMessages","start","e","console","log","contactList","listMessages","setListMessages","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/אוראל משען/Desktop/לימודים/chatbot/chat-bot/src/ChatPage.js"],"sourcesContent":["import LeftMenu from \"./LeftMenu\";\r\nimport RightSec from \"./RightSec\";\r\nimport {useState} from \"react\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {HubConnectionBuilder, LogLevel} from \"@microsoft/signalr\";\r\n\r\n\r\nfunction ChatPage() {\r\n    let data = useLocation().state.id;\r\n    // const [contact, setContact] = useState(null);\r\n    const [connection, setConnection] = useState([]);\r\n\r\n    async function fetchContact() {\r\n        let ser = await fetch('http://localhost:5108/api/contacts/user/' + data, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        ser = await ser.json();\r\n        setContactList(ser[0].contacts);\r\n    }\r\n\r\n    // async function fetchMessages() {\r\n    //     let userData = await fetch(\"http://localhost:5108/api/contacts/\" + contact.id + \"/messages?username=\" + data, {\r\n    //         method: 'GET',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         }\r\n    //     });\r\n    //     userData = await userData.json();\r\n    //     setListMessages(userData);\r\n    // }\r\n\r\n    const connectServer = async () => {\r\n        try {\r\n            const connection = new HubConnectionBuilder()\r\n                .withUrl(\"http://localhost:5108/serverHub\")\r\n                .configureLogging(LogLevel.Information).build();\r\n            connection.on(\"ReceiveMessage\", () => {\r\n                fetchContact();\r\n                if (contact) {\r\n                    fetchMessages();\r\n                }\r\n            });\r\n            connection.on(\"ReceiveContact\", () => {\r\n                fetchContact();\r\n            })\r\n            await connection.start();\r\n            setConnection(connection)\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    let [contactList, setContactList] = useState([]);\r\n    const [listMessages, setListMessages] = useState([]);\r\n    connectServer();\r\n    return (\r\n        <div className=\"chat-page-background\">\r\n            <RightSec contact={contact} listMessages={listMessages} setListMessages={setListMessages}\r\n                      username={data} />\r\n            {/*<LeftMenu user={data} setContact={setContact} setListMessages={setListMessages} prevContact={contact}*/}\r\n            {/*          listMessages={listMessages} contactList={contactList} setContactList={setContactList}*/}\r\n            {/*          />*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage;"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,oBAAoB,EAAEC,QAAQ,QAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlE,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,IAAIC,IAAI,GAAGP,WAAW,EAAE,CAACQ,KAAK,CAACC,EAAE;EACjC;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhD,eAAea,YAAYA,CAAA,EAAG;IAC1B,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAA0C,GAAGP,IAAI,EAAE;MACrEQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACFH,GAAG,GAAG,MAAMA,GAAG,CAACI,IAAI,EAAE;IACtBC,cAAc,CAACL,GAAG,CAAC,CAAC,CAAC,CAACM,QAAQ,CAAC;EACnC;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMV,UAAU,GAAG,IAAIT,oBAAoB,EAAE,CACxCoB,OAAO,CAAC,iCAAiC,CAAC,CAC1CC,gBAAgB,CAACpB,QAAQ,CAACqB,WAAW,CAAC,CAACC,KAAK,EAAE;MACnDd,UAAU,CAACe,EAAE,CAAC,gBAAgB,EAAE,MAAM;QAClCb,YAAY,EAAE;QACd,IAAIc,OAAO,EAAE;UACTC,aAAa,EAAE;QACnB;MACJ,CAAC,CAAC;MACFjB,UAAU,CAACe,EAAE,CAAC,gBAAgB,EAAE,MAAM;QAClCb,YAAY,EAAE;MAClB,CAAC,CAAC;MACF,MAAMF,UAAU,CAACkB,KAAK,EAAE;MACxBjB,aAAa,CAACD,UAAU,CAAC;IAC7B,CAAC,CAAC,OAAOmB,CAAC,EAAE;MACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAClB;EACJ,CAAC;EACD,IAAI,CAACG,WAAW,EAAEd,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACpDqB,aAAa,EAAE;EACf,oBACIhB,OAAA;IAAK+B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACjChC,OAAA,CAACN,QAAQ;MAAC4B,OAAO,EAAEA,OAAQ;MAACO,YAAY,EAAEA,YAAa;MAACC,eAAe,EAAEA,eAAgB;MAC/EG,QAAQ,EAAE9B;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAI1B;AAEd;AAACnC,EAAA,CA3DQD,QAAQ;EAAA,QACFL,WAAW;AAAA;AAAA0C,EAAA,GADjBrC,QAAQ;AA6DjB,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}